{{#if errorMessage}}
    <div class="alert alert-danger"> <strong>Error:</strong> {{errorMessage}}</div>
{{else if successMessage}}
    <div class="alert alert-success"> <strong>Success:</strong> {{successMessage}}</div>
{{/if}}

<h1>{{data.displayName}}</h1>

<p>Login Reward Bonus: {{data.loginBonus}}</p>

<div class="d-flex justify-content-end">
    <div class="p-2" id="IronResource-js-title" title="Iron: {{addCommas Resource.Iron}}"><img src="/icon/iron_crop.png" alt="fail"/><span id="IronResource-js">{{addCommas Resource.Iron}}</span></div>
    <div class="p-2" title="Crystal: {{addCommas Resource.Crystal}}">Crystal: {{addCommas Resource.Crystal}}</div>
    <div class="p-2" title="Petroleum: {{addCommas Resource.Petroleum}}">Petroleum: {{addCommas Resource.Petroleum}}</div>
</div>

<div class="border border-dark">
    <p>Daily Reward</p>
    
    <form action="/account/claimDailyReward" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Daily Reward!"></input>
    </form>
</div>

<hr>
<div>
    <p>Number Abbr test</p>
    <p title="Iron: {{addCommas 1234.7}}">{{toAbbr 1234.7}}</p>
    <p>{{toAbbr 2345678}}</p>
    <p>{{toAbbr 3456789876}}</p>
</div>


<div class="border border-dark">
    <p>{{IronMine.Name}} - Lv {{IronMine.Level}}</p>
    <p id="ironMineRate-js">Status: </p>

    <p>Produce Rate: {{toAbbr IronMine.ProduceRate}}</p>
    <p>Capacity: {{toAbbr IronMine.Capacity}}</p>
    
    <p>Upgrade Cost: Iron - {{toAbbr IronMine.UpgradeCost_Iron}}</p>
    <p>Upgrade Cost: Crystal - {{toAbbr IronMine.UpgradeCost_Crystal}}</p>
    <p>Upgrade Time: {{IronMine.UpgradeCost_Time}}</p>
    {{#if IronMine.UpgradeCost_Status}}
    <p id="ironMineUpgrade-js">Upgrade RemainDuration: {{calDuration IronMine.UpgradeCost_TimeStart IronMine.UpgradeCost_Time}}</p>
    {{/if}}
    {{#if IronMine.UpgradeCost_Status}}
    <form action="/account/upgradeIronMine" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{IronMine.Name}} - Lv.{{sum IronMine.Level 1}}" disabled></input>
    </form>
    {{else}}
    <form action="/account/upgradeIronMine" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{IronMine.Name}} - Lv.{{sum IronMine.Level 1}}"></input>
    </form>
    {{/if}}

    <br>
    <br>
    <form action="/account/Iron1000" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Iron +1000"></input>
    </form>

</div>

<br>
<br>
<br>

<div class="border border-dark">
    <p>{{IronStorage.Name}} - Lv {{IronStorage.Level}}</p>

    <p>Storage Capacity: {{toAbbr IronStorage.Capacity}}</p>

    <p>Upgrade Cost: Iron - {{toAbbr IronStorage.UpgradeCost_Iron}}</p>
    <p>Upgrade Cost: Crystal - {{toAbbr IronStorage.UpgradeCost_Crystal}}</p>
    <form action="/account/upgradeIronStorage" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{IronStorage.Name}} - Lv.{{sum IronStorage.Level 1}}"></input>
    </form>
</div>

<br>
<br>
<br>

<div class="border border-primary">
    <p>{{CrystalMine.Name}} - Lv {{CrystalMine.Level}}</p>

    <p>Produce Rate: {{toAbbr CrystalMine.ProduceRate}}</p>

    <p>Upgrade Cost: Iron - {{toAbbr CrystalMine.UpgradeCost_Iron}}</p>
    <p>Upgrade Cost: Crystal - {{toAbbr CrystalMine.UpgradeCost_Crystal}}</p>
    <form action="/account/upgradeCrystalMine" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{CrystalMine.Name}} - Lv.{{sum CrystalMine.Level 1}}"></input>
    </form>
</div>

<div class="border border-primary">
    <p>{{CrystalStorage.Name}} - Lv {{CrystalStorage.Level}}</p>

    <p>Storage Capacity: {{toAbbr CrystalStorage.Capacity}}</p>

    <p>Upgrade Cost: Iron - {{toAbbr CrystalStorage.UpgradeCost_Iron}}</p>
    <p>Upgrade Cost: Crystal - {{toAbbr CrystalStorage.UpgradeCost_Crystal}}</p>
    <form action="/account/upgradeCrystalStorage" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{CrystalStorage.Name}} - Lv.{{sum CrystalStorage.Level 1}}"></input>
    </form>
</div>

<div class="border border-primary">
    <p>{{PetroleumMine.Name}} - Lv {{PetroleumMine.Level}}</p>

    <p>Produce Rate: {{toAbbr PetroleumMine.ProduceRate}}</p>

    <p>Upgrade Cost: Iron - {{toAbbr PetroleumMine.UpgradeCost_Iron}}</p>
    <p>Upgrade Cost: Crystal - {{toAbbr PetroleumMine.UpgradeCost_Crystal}}</p>
    <form action="/account/upgradePetroleumMine" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{PetroleumMine.Name}} - Lv.{{sum PetroleumMine.Level 1}}"></input>
    </form>
</div>
<div class="border border-primary">
    <p>{{PetroleumStorage.Name}} - Lv {{PetroleumStorage.Level}}</p>

    <p>Storage Capacity: {{toAbbr PetroleumStorage.Capacity}}</p>

    <p>Upgrade Cost: Iron - {{toAbbr PetroleumStorage.UpgradeCost_Iron}}</p>
    <p>Upgrade Cost: Crystal - {{toAbbr PetroleumStorage.UpgradeCost_Crystal}}</p>
    <form action="/account/upgradePetroleumStorage" method="POST">
        <input class="btn btn-primary" role="button" type="submit" value="Upgrade {{PetroleumStorage.Name}} - Lv.{{sum PetroleumStorage.Level 1}}"></input>
    </form>
</div>

<div>
    <h2>Item Bags</h2>
</div>

<div>
    <h2>Resource</h2>
        {{#each ItemBag.Resource}}
            {{#if Amount}}
                <div onclick="updateInputAndSelect('{{Name}}', {{Amount}})">
                    <p>{{Name}}</p>
                    <p>Amount: {{Amount}}</p>
                </div>
            {{else}}
                <p>Should not display</p>
            {{/if}}
        {{/each}}
    <div>
        <h3>Select Resource</h3>
        <input type="number" id="customNumber" min="1" value="1">
        
        <button onclick="decrementValue()">-</button>
        <button onclick="incrementValue()">+</button>
    </div>


    <h2>Materials</h2>
        {{#each ItemBag.Materials}}
            {{#if Amount}}
                <p>{{Name}}</p>
                <p>{{Amount}}</p>
            {{else}}
                <p>Should not display</p>
            {{/if}}
        {{/each}}

</div>

<script>
    function upgradeIronMine() {
        let dateNow = Math.floor(Date.now() / 1000); // Convert to seconds
        //produce rate
        let duration = dateNow - {{data.previousCollectTime}};
        let rate;
        //parseInt({{IronMine.ProduceRate}} * duration/3600 * {{Achievement.Resource.Bonus}}) <= {{IronMine.Capacity}} ? rate = parseInt({{IronMine.ProduceRate}} * duration/3600 * {{Achievement.Resource.Bonus}}) : rate = {{IronMine.Capacity}};
        //const produceRate = "Status: " + rate + "/" + {{IronMine.Capacity}};
        //document.getElementById('ironMineRate-js').innerText = produceRate;

        if({{Resource.Iron}} >= {{IronStorage.Capacity}}){
          rate = {{Resource.Iron}};
        }else if(( {{Resource.Iron}} + parseInt({{IronMine.ProduceRate}} * duration/3600 * {{Achievement.Resource.Bonus}}) ) <= {{IronStorage.Capacity}} ){
          //determine how many thing that we can collect
          rate = {{Resource.Iron}} + parseInt({{IronMine.ProduceRate}} * duration/3600 * {{Achievement.Resource.Bonus}});
        }
        
        document.getElementById('IronResource-js').innerText = rate;
        document.getElementById('IronResource-js-title').title = "Iron: " + rate;
                //upgrade status
        if({{IronMine.UpgradeCost_Status}}){
            const upgradeTimeStart = {{IronMine.UpgradeCost_TimeStart}};
            const upgradeTimeDuration = {{IronMine.UpgradeCost_Time}};
            const timeRemain = "Upgrade Remain Duration: " + (upgradeTimeDuration - (dateNow - upgradeTimeStart))
            document.getElementById('ironMineUpgrade-js').innerText = timeRemain;
            if((upgradeTimeDuration - (dateNow - upgradeTimeStart)) <= 0){
                //1. upgrading, 2. during upgrading, collect resource, 3. finished upgrading /collectResource
                //collectAllResource
                //window.location.reload();
                window.location.replace(window.location.origin + "/account")
            }
        }else{
            document.getElementById('ironMineUpgrade-js').innerText = "";
        }


    }
setInterval(upgradeIronMine, 1000);
// Initial call to run the test function immediately
upgradeIronMine();

        function updateInputAndSelect(name, amount) {
            const customNumberInput = document.getElementById('customNumber');
            customNumberInput.value = amount;
        }

        function decrementValue() {
            const customNumberInput = document.getElementById('customNumber');
            if (customNumberInput.value > 1) {
                customNumberInput.value = parseInt(customNumberInput.value) - 1;
            }
        }

        function incrementValue() {
            const customNumberInput = document.getElementById('customNumber');
            customNumberInput.value = parseInt(customNumberInput.value) + 1;
        }


</script>